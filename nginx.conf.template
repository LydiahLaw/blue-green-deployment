events {
    worker_connections 1024;
}

http {
    upstream backend {
        # Primary server based on ACTIVE_POOL
        server app_${ACTIVE_POOL}:3000 max_fails=1 fail_timeout=5s;
        
        # Backup server (the opposite of active)
        server app_blue:3000 backup max_fails=1 fail_timeout=5s;
        server app_green:3000 backup max_fails=1 fail_timeout=5s;
    }

    server {
        listen 80;
        
        location / {
            proxy_pass http://backend;
            
            # Critical: try next upstream on errors
            proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
            proxy_next_upstream_tries 3;
            
            # Tight timeouts for fast detection
            proxy_connect_timeout 2s;
            proxy_send_timeout 2s;
            proxy_read_timeout 2s;
            
            # Enable keepalive
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            # Standard headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            # Critical: ensure upstream headers are passed through
            proxy_pass_request_headers on;
            
            # Don't buffer, we want immediate failover
            proxy_buffering off;
        }
    }
}
